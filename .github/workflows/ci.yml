# .github/workflows/ci.yml

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Specify your project's Node.js version
          cache: 'npm' # Or 'yarn' if you use yarn

      - name: Install dependencies
        run: npm ci # Use 'npm ci' for faster, reliable installs in CI

      - name: Run ESLint
        run: npm run lint

      # Optional: Add type checking if not covered by lint script
      # - name: Check TypeScript types
      #   run: npx tsc --noEmit

  build-app: # Renamed from 'build'
    name: Start Next.js Development Server # Updated name to reflect new action
    runs-on: ubuntu-latest
    needs: lint # Depends on lint job
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Specify your project's Node.js version
          cache: 'npm' # Or 'yarn' if you use yarn

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate # Ensure Prisma client is generated before build

      - name: Start Next.js development server
        run: npm run dev -- --port 3000 &
        
      - name: Wait for server to start
        run: sleep 15
      
      - name: Check if server is running
        run: curl -s http://localhost:3000 || (echo "Development server failed to start" && exit 1)
        
      # Kill the background process
      - name: Stop Next.js server
        if: always()
        run: pkill -f "next dev" || true

  build-image: # New job for Docker
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-app # Depends on the app build job
    permissions:
      contents: read
      packages: write # Needed to push to GHCR
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Assumes Dockerfile is in the root
          push: true # Set to false if you only want to build on PRs, true on merge/push to main
          tags: ghcr.io/${{ github.repository }}:latest # Adjust tag as needed
          # Add build args if needed, e.g.:
          # build-args: |
          #   NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID=${{ secrets.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID }}
