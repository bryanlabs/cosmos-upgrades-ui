name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '*' ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint

  build-app:
    name: Build Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Check environment
        id: check-act
        run: |
          if [ -n "$ACT" ]; then
            echo "running_with_act=true" >> $GITHUB_OUTPUT
          else
            echo "running_with_act=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
      
      - name: Upload build artifacts
        if: steps.check-act.outputs.running_with_act != 'true'
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: build/
          retention-days: 1

  build-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build-app
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Check environment
        id: check-act
        run: |
          if [ -n "$ACT" ]; then
            echo "running_with_act=true" >> $GITHUB_OUTPUT
          else
            echo "running_with_act=false" >> $GITHUB_OUTPUT
          fi
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: ${{ steps.check-act.outputs.running_with_act == 'true' && '--allow-insecure-entitlement security.insecure' || '' }}
        
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: cosmos-upgrades-ui:latest
          cache-from: ${{ steps.check-act.outputs.running_with_act != 'true' && 'type=gha' || 'type=local,src=/tmp/.buildx-cache' }}
          cache-to: ${{ steps.check-act.outputs.running_with_act != 'true' && 'type=gha,mode=max' || 'type=local,dest=/tmp/.buildx-cache' }}